name: CI

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive -Path ngrok.zip -DestinationPath ngrok
          rm ngrok.zip
          mv ngrok/ngrok.exe ngrok.exe

      - name: Replace ngrok with latest version
        run: |
          # Replace ngrok with the latest version
          Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok_latest.zip
          Expand-Archive -Path ngrok_latest.zip -DestinationPath ngrok_tmp
          rm ngrok_latest.zip
          rm ngrok.exe  # Remove the existing ngrok executable
          mv ngrok_tmp/ngrok.exe ngrok.exe
          rm -r ngrok_tmp

      - name: Authenticate
        run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN

        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable TS
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
      - name: Set Local User Password
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

      - name: Create Tunnel
        run: .\ngrok.exe tcp 3389
